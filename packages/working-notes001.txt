 Setoid a => a ~> a -> Boolean
 Ord a => a ~> a -> Boolean
 Semigroupoid c => c i j ~> c j k -> c i k
 Category c => () -> c a a
 Semigroup a => a ~> a -> a
 Monoid m => () -> m
 Group g => g ~> () -> g
 Filterable f => f a ~> (a -> Boolean) -> f a
 Functor f => f a ~> (a -> b) -> f b
 Contravariant f => f a ~> (b -> a) -> f b
 Apply f => f a ~> f (a -> b) -> f b
 Applicative f => a -> f a
 Alt f => f a ~> f a -> f a
 Plus f => () -> f a
 Foldable f => f a ~> ((b, a) -> b, b) -> b
 Applicative f, Traversable t => t a ~> (TypeRep f, a -> f b) -> f (t b)
 Chain m => m a ~> (a -> m b) -> m b
 ChainRec m => ((a -> c, b -> c, a) -> m c, a) -> m b
 Extend w => w a ~> (w a -> b) -> w b
 Comonad w => w a ~> () -> a
 Bifunctor f => f a c ~> (a -> b, c -> d) -> f b d
 Profunctor p => p b c ~> (a -> b, c -> d) -> p a d
