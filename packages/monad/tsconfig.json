{
  "compilerOptions": {
    /* ALWAYS TRUE STRICT TYPE-CHECKING, ADDITIONAL CHECKS MUST ALWAYS BE TRUE*/
    /* ALWAYS TRUE */ "strict": true /*                         ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "alwaysStrict": true /*                   ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "noImplicitAny": true /*                  ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "noImplicitThis": true /*                 ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "strictBindCallApply": true /*            ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "strictFunctionTypes": true /*            ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "strictNullChecks": true /*               ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "strictPropertyInitialization": true /*   ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "noFallthroughCasesInSwitch": true /*     ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "noImplicitReturns": true /*              ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "noUnusedLocals": true /*                 ALWAYS TRUE  */,
    /* ALWAYS TRUE */ "noUnusedParameters": true /*             ALWAYS TRUE  */,
    /* ALWAYS TRUE STRICT TYPE-CHECKING, ADDITIONAL CHECKS MUST ALWAYS BE TRUE*/
    /* ALWAYS FALSE */ "allowUmdGlobalAccess": false,
    /* ALWAYS FALSE */ "allowUnreachableCode": false,
    /* ALWAYS FALSE */ "allowUnusedLabels": false,
    /* ALWAYS FALSE */ "assumeChangesOnlyAffectDirectDependencies": false,
    /* ALWAYS FALSE */ "useDefineForClassFields": false,
    /*                                                                        */

    /* Basic Options */
    "incremental": true /* Enable incremental compilation */,
    "target": "es5" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,

    /* Specify library files to be included in the compilation. */
    "lib": ["dom", "esnext", "dom.iterable"],

    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "declarationMap": true /* Generates a sourcemap for each corresponding '.d.ts' file. */,
    "declarationDir": "./out/typings",
    "outDir": "./out" /* Redirect output structure to the directory. */,
    "rootDir": "./" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    "composite": true /* Enable project compilation */,
    "tsBuildInfoFile": "./out/tmp/tsBuildInfoFile.log" /* Specify file to store incremental compilation information */,
    "removeComments": true /* Do not emit comments to output. */,
    "noEmit": false /* Do not emit outputs. */,
    "importHelpers": true /* Import emit helpers from 'tslib'. */,
    "downlevelIteration": true /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */,
    "isolatedModules": false /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,

    /* Module Resolution Options */
    /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "moduleResolution": "node",
    /* Type declaration files to be included in compilation. */
    "types": ["node"],
    /* List of folders to include type definitions from. */
    "typeRoots": ["./node_modules/@types", "./typings"],
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    "inlineSourceMap": true /* Emit a single file with source maps instead of having a separate file. */,
    "inlineSources": true /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */,

    /* Advanced Options */
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "skipDefaultLibCheck": false,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,

    /* Experimental Options */
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,

    "resolveJsonModule": true,
    "pretty": true,
    "watch": false,
    "listFiles": false,
    "diagnostics": true,
    "traceResolution": false,
    "listEmittedFiles": false,
    "extendedDiagnostics": true
  },
  "exclude": ["**/specs/**/*"]
}
